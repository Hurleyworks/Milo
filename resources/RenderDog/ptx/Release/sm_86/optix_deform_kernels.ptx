//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-36037853
// Cuda compilation tools, release 12.9, V12.9.86
// Based on NVVM 7.0.1
//

.version 8.8
.target sm_86
.address_size 64

	// .globl	resetDeform
.const .align 1 .b8 __nv_static_45__24d08988_23_optix_deform_kernels_cu_05d2a209__ZN54_INTERNAL_24d08988_23_optix_deform_kernels_cu_05d2a2096shared16PermutationTableE[76] = {0, 10, 2, 7, 3, 5, 6, 4, 8, 1, 9, 5, 11, 6, 8, 1, 10, 12, 9, 3, 7, 0, 4, 2, 13, 10, 11, 5, 6, 9, 4, 3, 8, 7, 14, 2, 0, 1, 15, 12, 1, 13, 5, 14, 12, 3, 6, 16, 0, 8, 9, 2, 11, 4, 15, 7, 10, 10, 6, 5, 8, 15, 0, 17, 7, 14, 18, 13, 16, 2, 9, 12, 1, 11, 4, 3};

.visible .entry resetDeform(
	.param .u64 resetDeform_param_0,
	.param .u64 resetDeform_param_1,
	.param .u32 resetDeform_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [resetDeform_param_0];
	ld.param.u64 	%rd2, [resetDeform_param_1];
	ld.param.u32 	%r2, [resetDeform_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.u32 	%rd4, %r1, 44;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f3, [%rd5+8];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f1;
	st.global.f32 	[%rd7+4], %f2;
	st.global.f32 	[%rd7+8], %f3;
	mov.u32 	%r6, 0;
	st.global.u32 	[%rd7+12], %r6;
	st.global.u32 	[%rd7+16], %r6;
	st.global.u32 	[%rd7+20], %r6;

$L__BB0_2:
	ret;

}
	// .globl	deform
.visible .entry deform(
	.param .u64 deform_param_0,
	.param .u64 deform_param_1,
	.param .u32 deform_param_2,
	.param .u64 deform_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [deform_param_1];
	ld.param.u32 	%r2, [deform_param_2];
	ld.param.u64 	%rd2, [deform_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r1, 12;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	ld.global.f32 	%f2, [%rd5+4];
	ld.global.f32 	%f3, [%rd5+8];
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.u32 	%rd7, %r1, 44;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;
	st.global.f32 	[%rd8+4], %f2;
	st.global.f32 	[%rd8+8], %f3;
	mov.u32 	%r6, 0;
	st.global.u32 	[%rd8+12], %r6;
	st.global.u32 	[%rd8+16], %r6;
	st.global.u32 	[%rd8+20], %r6;

$L__BB1_2:
	ret;

}
	// .globl	accumulateVertexNormals
.visible .entry accumulateVertexNormals(
	.param .u64 accumulateVertexNormals_param_0,
	.param .u64 accumulateVertexNormals_param_1,
	.param .u32 accumulateVertexNormals_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd1, [accumulateVertexNormals_param_0];
	ld.param.u64 	%rd2, [accumulateVertexNormals_param_1];
	ld.param.u32 	%r2, [accumulateVertexNormals_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.u32 	%rd5, %r1, 12;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.u32 	%r6, [%rd6];
	ld.global.u32 	%r7, [%rd6+4];
	ld.global.u32 	%r8, [%rd6+8];
	mul.wide.u32 	%rd7, %r7, 44;
	add.s64 	%rd8, %rd3, %rd7;
	mul.wide.u32 	%rd9, %r6, 44;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	sub.ftz.f32 	%f3, %f2, %f1;
	ld.global.f32 	%f4, [%rd10+4];
	ld.global.f32 	%f5, [%rd8+4];
	sub.ftz.f32 	%f6, %f5, %f4;
	ld.global.f32 	%f7, [%rd10+8];
	ld.global.f32 	%f8, [%rd8+8];
	sub.ftz.f32 	%f9, %f8, %f7;
	mul.wide.u32 	%rd11, %r8, 44;
	add.s64 	%rd12, %rd3, %rd11;
	ld.global.f32 	%f10, [%rd12];
	sub.ftz.f32 	%f11, %f10, %f1;
	ld.global.f32 	%f12, [%rd12+4];
	sub.ftz.f32 	%f13, %f12, %f4;
	ld.global.f32 	%f14, [%rd12+8];
	sub.ftz.f32 	%f15, %f14, %f7;
	mul.ftz.f32 	%f16, %f6, %f15;
	mul.ftz.f32 	%f17, %f9, %f13;
	sub.ftz.f32 	%f18, %f16, %f17;
	mul.ftz.f32 	%f19, %f9, %f11;
	mul.ftz.f32 	%f20, %f3, %f15;
	sub.ftz.f32 	%f21, %f19, %f20;
	mul.ftz.f32 	%f22, %f3, %f13;
	mul.ftz.f32 	%f23, %f6, %f11;
	sub.ftz.f32 	%f24, %f22, %f23;
	mul.ftz.f32 	%f25, %f21, %f21;
	fma.rn.ftz.f32 	%f26, %f18, %f18, %f25;
	fma.rn.ftz.f32 	%f27, %f24, %f24, %f26;
	rsqrt.approx.ftz.f32 	%f28, %f27;
	mul.ftz.f32 	%f29, %f28, %f18;
	mul.ftz.f32 	%f30, %f28, %f21;
	mul.ftz.f32 	%f31, %f24, %f28;
	mul.ftz.f32 	%f32, %f29, 0f4B800000;
	cvt.rzi.ftz.s32.f32 	%r9, %f32;
	mul.ftz.f32 	%f33, %f30, 0f4B800000;
	cvt.rzi.ftz.s32.f32 	%r10, %f33;
	mul.ftz.f32 	%f34, %f31, 0f4B800000;
	cvt.rzi.ftz.s32.f32 	%r11, %f34;
	add.s64 	%rd13, %rd10, 12;
	atom.global.add.u32 	%r12, [%rd13], %r9;
	add.s64 	%rd14, %rd10, 16;
	atom.global.add.u32 	%r13, [%rd14], %r10;
	add.s64 	%rd15, %rd10, 20;
	atom.global.add.u32 	%r14, [%rd15], %r11;
	add.s64 	%rd16, %rd8, 12;
	atom.global.add.u32 	%r15, [%rd16], %r9;
	add.s64 	%rd17, %rd8, 16;
	atom.global.add.u32 	%r16, [%rd17], %r10;
	add.s64 	%rd18, %rd8, 20;
	atom.global.add.u32 	%r17, [%rd18], %r11;
	add.s64 	%rd19, %rd12, 12;
	atom.global.add.u32 	%r18, [%rd19], %r9;
	add.s64 	%rd20, %rd12, 16;
	atom.global.add.u32 	%r19, [%rd20], %r10;
	add.s64 	%rd21, %rd12, 20;
	atom.global.add.u32 	%r20, [%rd21], %r11;

$L__BB2_2:
	ret;

}
	// .globl	normalizeVertexNormals
.visible .entry normalizeVertexNormals(
	.param .u64 normalizeVertexNormals_param_0,
	.param .u32 normalizeVertexNormals_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [normalizeVertexNormals_param_0];
	ld.param.u32 	%r2, [normalizeVertexNormals_param_1];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.u32 	%rd3, %r1, 44;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.u32 	%r6, [%rd4+12];
	cvt.rn.f32.s32 	%f1, %r6;
	mul.ftz.f32 	%f2, %f1, 0f33800000;
	ld.global.u32 	%r7, [%rd4+16];
	cvt.rn.f32.s32 	%f3, %r7;
	mul.ftz.f32 	%f4, %f3, 0f33800000;
	ld.global.u32 	%r8, [%rd4+20];
	cvt.rn.f32.s32 	%f5, %r8;
	mul.ftz.f32 	%f6, %f5, 0f33800000;
	mul.ftz.f32 	%f7, %f4, %f4;
	fma.rn.ftz.f32 	%f8, %f2, %f2, %f7;
	fma.rn.ftz.f32 	%f9, %f6, %f6, %f8;
	rsqrt.approx.ftz.f32 	%f10, %f9;
	mul.ftz.f32 	%f11, %f2, %f10;
	mul.ftz.f32 	%f12, %f4, %f10;
	mul.ftz.f32 	%f13, %f6, %f10;
	st.global.f32 	[%rd4+12], %f11;
	st.global.f32 	[%rd4+16], %f12;
	st.global.f32 	[%rd4+20], %f13;

$L__BB3_2:
	ret;

}

