// This header file was auto-generated by ClassMate++
// Created: 11 Sep 2015 7:51:05 am
// Copyright (c) 2015, HurleyWorks

#pragma once

namespace qms
{
    static const char* QmsIDTable[] =
        {
            "TopPriority",
            "ClearQueue",

            // dreamer messages
            "Init",
            "OnError",
            "OnPriorityInput",
            "OnRenderFrameComplete",
            "Tick",
            "RendererReady",

            // geometry messages
            "LoadModel",
            "LoadModelList",

            // imaging messages
            "InitImageServices",
            "LoadImage",
            "LoadImageList",
            "LoadImageFolder",

            // world messages
            "AddNodeToWorld",
            "AddNodeListToWorld",
            "CreateInstanceStack",
            "CreateInstanceClump",
            "SelectAll",
            "DeselectAll",
            "SelectByOptions",

            // render messages
            "AddWeakNode",
            "RemoveWeakNode",
            "RemoveWeakNodeByID",
            "RemoveWeakNodeListByID",
            "AddWeakNodeList",
            "RemoveWeakNodeList",
            "InitRenderEngine",
            "RenderNextFrame",
            "RenderedFrameComplete",
            "RenderNextAnimationFrame",
            "AddSkydomeHDR",
            "ResetModtion",
            "SetAllModelsVisibility",
            "UpdateNodeMaterial",
            "UpdateViewportCameras",
            "GPUStatsMsg",
            "RenderableNodeProcessed",
            "RemovedRenderableNodes",
            "ListAvailableGPUs",
            "SelectGPU",
            "SetPipeline",
            "SetEngine",
            "EnablePipelineSystem",
            "SetShockerRenderMode",

            // physics messages
            "UpdatePhysics",
            "UpdatePose",
            "UpdatePhysicsProperties",
            "CreateOrUpdatePhantom",

            
            // ClaudeMessages
            "InitSocketServer",
            "ClientConnected",
            "ProcessMsg",
            "SendMsg",
            "BroadcastMsg",
            "UpdateSocketServer",
            "ExecuteCommand",
            "CommandResult",
            "InitCommandProcessor",
            "ExecuteCommandRequest", 


            // hidden app messages
            "InitializeApp",
            "RefreshApp",

            "Invalid"};

    struct QmsID
    {
        enum EQmsID
        {
            TopPriority,
            ClearQueue,

            // dreamer messages
            Init,
            OnError,
            OnPriorityInput,
            OnRenderFrameComplete,
            Tick,
            RendererReady,

            // geometry messages
            LoadModel,
            LoadModelList,

            // imaging messages
            InitImageServices,
            LoadImage,
            LoadImageList,
            LoadImageFolder,

            // world messages
            AddNodeToWorld,
            AddNodeListToWorld,
            CreateInstanceStack,
            CreateInstanceClump,
            SelectAll,
            DeselectAll,
            SelectByOptions,

            // rendering messages
            AddWeakNode,
            RemoveWeakNode,
            RemoveWeakNodeByID,
            RemoveWeakNodeListByID,
            AddWeakNodeList,
            RemoveWeakNodeList,
            InitRenderEngine,
            RenderNextFrame,
            RenderedFrameComplete,
            RenderNextAnimationFrame,
            AddSkydomeHDR,
            ResetModtion,
            SetAllModelsVisibility,
            UpdateNodeMaterial,
            UpdateViewportCameras,
            GPUStatsMsg,
            RenderableNodeProcessed,
            RemovedRenderableNodes,
            ListAvailableGPUs,
            SelectGPU,
            SetPipeline,
            SetEngine,
            EnablePipelineSystem,
            SetShockerRenderMode,

            // physics messages
            UpdatePhysics,
            UpdatePose,
            UpdatePhysicsProperties,
            CreateOrUpdatePhantom,

            // ClaudeMessages
            InitSocketServer,
            ClientConnected,
            ProcessMsg,
            SendMsg,
            BroadcastMsg,
            UpdateSocketServer,
            ExecuteCommand,
            CommandResult,
            InitCommandProcessor,
            ExecuteCommandRequest, 


            // hidden app messages
            InitializeApp,
            RefreshApp,

            Count,
            Invalid = Count
        };

        union
        {
            EQmsID name;
            unsigned int value;
        };

        QmsID (EQmsID name) :
            name (name) {}
        QmsID (unsigned int value) :
            value (value) {}
        QmsID() :
            value (Invalid) {}
        operator EQmsID() const { return name; }
        const char* toString() const { return QmsIDTable[value]; }
    };

    struct clear_queue
    {
        QmsID id = QmsID::TopPriority;
        QmsID realID = QmsID::ClearQueue;
    };

} // namespace qms
