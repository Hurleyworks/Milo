// This header file was auto-generated by ClassMate++
// Created: 24 Jul 2019 5:49:34 pm
// Copyright (c) 2019, HurleyWorks

#pragma once

#include <qms_core/qms_core.h>

class Dreamer; // forward decl for impl

using qms::QmsID;

class ActiveDreamer
{
    // The Active Object design pattern decouples method execution from
    // method invocation to enhance concurrency and simplify synchronized
    // access to an object that resides in its own thread of control.

 public:
    ActiveDreamer();
    ~ActiveDreamer();

    // messaging
    MsgSender getMessenger() { return incoming; }
    void done() { getMessenger().send (qms::clear_queue()); }

    Dreamer* getDreamer() { return impl.get(); }

 private:
    std::unique_ptr<Dreamer> impl;

    // messaging
    MsgReceiver incoming;

    // message arguments
    MessageService messengers;
    PropertyService properties;
    std::string imageFolder = UNSET_PATH;
    PathList filePaths;
    OIIO::ImageBuf image;
    std::string errMessage;
    ErrorSeverity errSeverity = ErrorSeverity::Information;

    // state functions
    std::thread stateThread;
    void (ActiveDreamer::*state)();
    void waitingForMessages();
    void init();
    void loadImageList();
    void onError();

    // state thread function
    void executeState();
    void start();

    bool shutdown = false;

}; // end class ActiveDreamer