// This header file was auto-generated by ClassMate++
// Created: 13 Jun 2015 6:04:33 am
// Copyright (c) 2015, HurleyWorks

#pragma  once

struct ZenMesh
{
	typedef std::shared_ptr<ZenMesh> Ptr;
	typedef std::shared_ptr<const ZenMesh> ConstPtr;

	bool isReady() const { return vertices.rows() > 3 && indices.rows() > 0; }

	Vertices3f vertices;
	Indices3i indices;

}; 

struct ZenMeshD
{
	typedef std::shared_ptr<ZenMeshD> Ptr;
	typedef std::shared_ptr<const ZenMeshD> ConstPtr;

	bool isReady() const { return vertices.rows() > 3 && indices.rows() > 0; }

	Vertices3d vertices;
	Indices3i indices;
};


typedef std::vector<ZenMesh::Ptr> ZenMeshes;
