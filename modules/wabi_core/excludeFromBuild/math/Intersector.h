// This header file was auto-generated by ClassMate++
// Created: 29 Jul 2009 11:33:13 pm
// Copyright (c) 2009, HurleyWorks

// modified version of 
// Geometric Tools, LLC
// Copyright (c) 1998-2010
// Distributed under the Boost Software License, Version 1.0.
// http://www.boost.org/LICENSE_1_0.txt
// http://www.geometrictools.com/License/Boost/LICENSE_1_0.txt

#pragma once

template <typename T, typename vector_t>
class Intersector
{
 
 public:
	// Information about the intersection set
    enum
    {
        IT_EMPTY,
        IT_POINT,
        IT_SEGMENT,
        IT_RAY,
        IT_LINE,
        IT_POLYGON,
        IT_PLANE,
        IT_POLYHEDRON,
        IT_OTHER
    };
    
 public:
	virtual ~Intersector ();

	virtual bool test ();
    virtual bool find ();
	virtual bool find( T dist3[], T signs3[] );
	int getIntersectionType () const { return intersectionType_; }

 protected:
    Intersector ();

    int intersectionType_;
};

typedef Intersector<float, Eigen::Vector2f > Intersector2f;
typedef Intersector<float, Eigen::Vector3f > Intersector3f;
typedef Intersector<double, Eigen::Vector2d > Intersector2d;
typedef Intersector<double, Eigen::Vector3d > Intersector3d;