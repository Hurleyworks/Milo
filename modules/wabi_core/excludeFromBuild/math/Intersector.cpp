// This source file was auto-generated by ClassMate++
// Created: 19 Jul 2010 2:59:18 pm
// Copyright (c) 2010, HurleyWorks

// modified version of 
// Geometric Tools, LLC
// Copyright (c) 1998-2010
// Distributed under the Boost Software License, Version 1.0.
// http://www.boost.org/LICENSE_1_0.txt
// http://www.geometrictools.com/License/Boost/LICENSE_1_0.txt

using Eigen::Vector3f;


// ctor
template <typename T, typename vector_t>
Intersector<T, vector_t>::Intersector ()
	: intersectionType_(IT_EMPTY)
{	
}

// dtor
template <typename T, typename vector_t>
Intersector<T, vector_t>::~Intersector ()
{	
}

// find
template <typename T, typename vector_t>
bool Intersector<T, vector_t>::find ()
{
	
	return false;
}

// find
template <typename T, typename vector_t>
bool Intersector<T, vector_t>::find (T dist3[], T signs3[])
{	
	
	return false;
}

// test
template <typename T, typename vector_t>
bool Intersector<T, vector_t>::test ()
{	
	
	return false;
}

// Explicit instantiation.
template
class Intersector<float,Vector2f>;

template
class Intersector<float,Vector3f>;

template
class Intersector<double,Vector2d>;

template
class Intersector<double,Vector3d>;
